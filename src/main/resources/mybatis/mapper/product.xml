<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.ProductDao">
	<resultMap type="com.mycompany.webapp.dto.ProductList" id="productListResultMap">
		<id property="pstockid" column="pstockid"/>
		<result property="pcolorid" column="pcolorid"/>
		<result property="pname" column="pname"/>
		<result property="img1" column="img1"/>
		<result property="scode" column="scode"/>
		<result property="ccode" column="ccode"/>
		<result property="pprice" column="pprice"/>
		<result property="stock" column="stock"/>
		<result property="bname" column="bname"/>
		<result property="d1name" column="d1name"/>
		<result property="d2name" column="d2name"/>
		<result property="d3name" column="d3name"/>
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="productListResult">
		<id property="pcommonid" column="pcommonid"/>
		<result property="bname" column="bname"/>
		<result property="pname" column="pname"/>
		<result property="d1name" column="d1name"/>
		<result property="d2name" column="d2name"/>
		<result property="d3name" column="d3name"/>
		<collection property="colorList" javaType="java.util.ArrayList" resultMap="colorChipMap"/>
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="colorChipMap">
		<id property="pcolorId" column="pcolorId"/>
		<result property="img1" column="img1"/>
		<result property="pprice" column="pprice"/>
  		<result property="color_img" column="color_img"/>
	</resultMap>
	
	<resultMap type="com.mycompany.webapp.dto.ProductDetail" id="productDetailMap">
		<id property="pcommonid" column="pcommonId"/>
		<result property="bname" column="bname"/>
		<result property="pname" column="pname"/>
		<result property="pprice" column="pprice"/>
		<result property="pcolorid" column="pcolorid"/>
		<result property="pcommonid" column="pcommonid"/>
		<result property="pnote" column="pnote"/>
		<result property="img1" column="img1"/>
		<result property="img2" column="img2"/>
		<result property="img3" column="img3"/>
		<result property="ccode" column="ccode"/>
	</resultMap>
	
	<resultMap type="com.mycompany.webapp.dto.Product" id="productMap">
		<collection property="productCommon" resultMap="productCommonMap"/>
		<collection property="productColor" resultMap="productColorMap"/>
		<collection property="productStock" resultMap="productStockMap"/>
		<collection property="brand" resultMap="brandMap"/>
		<collection property="categoryVo" resultMap="categoryMap"/>
	</resultMap>

		
<!-- 	<select id="getProductList" parameterType="com.mycompany.webapp.dto.Pager" resultMap="productListResultMap"> -->
<!-- 	SELECT pstock.id pstockid, pcommon.name pname, size_code, color_code, price, stock, brand.name bname, depth1_name, depth2_name, depth3_name -->
<!-- 	  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor ON (pstock.product_color_id = pcolor.id) -->
<!-- 	    JOIN PRODUCT_COMMON pcommon ON (pcolor.product_common_id = pcommon.id) -->
<!-- 	    JOIN BRAND ON (pcommon.brand_no = brand.no) -->
<!-- 	    JOIN PRODUCT_CATEGORY pcategory ON (pcategory.product_common_id = pcommon.id) -->
<!-- 	    JOIN CATEGORY ON (category.no = pcategory.category_no) -->
<!-- 	    offset #{pager.startRow} rows -->
<!-- 	    fetch first #{pager.rowsPerPage} rows only -->
<!-- 	</select> -->
	<!-- 백오피스 상품 조회 부분 샘플. 컬럼 이름 바꿔서 사용할 것 ! -->
	<!-- <select id="getProductSampleList" resultMap="productListResultMap">
	SELECT pstock.id pstockid, pcommon.name pname, size_code, color_code, price, stock, brand.name bname, depth1_name, depth2_name, depth3_name
	  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor ON (pstock.product_color_id = pcolor.id)
	    JOIN PRODUCT_COMMON pcommon ON (pcolor.product_common_id = pcommon.id)
	    JOIN BRAND ON (pcommon.brand_no = brand.no)
	    JOIN PRODUCT_CATEGORY pcategory ON (pcategory.product_common_id = pcommon.id)
	    JOIN CATEGORY ON (category.no = pcategory.category_no)
	    offset 10 rows
	    fetch first 40 rows only
	</select> -->
	
	<!-- 40개의 샘플 가져오기 -->
	<select id="getProductSampleList" parameterType="String" resultMap="productListResultMap">
	SELECT distinct pcolorid, pname, IMG1, pprice, bname, d1name, d2name, d3name
	  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor USING (pcolorid)
	    JOIN PRODUCT_COMMON pcommon USING (pcommonid)
	    JOIN BRAND USING(bno)
	    JOIN PRODUCT_CATEGORY pcategory USING (pcommonid)
	    JOIN CATEGORY USING(catno)
        WHERE D1NAME = #{d1name}
	    fetch first 40 rows only
	</select>
	
	<select id="getNewProductList" parameterType="String" resultMap="productListResultMap">
	SELECT distinct pcolorid, pname, IMG1, pprice, bname, d1name, d2name, d3name
	  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor USING (pcolorid)
	    JOIN PRODUCT_COMMON pcommon USING (pcommonid)
	    JOIN BRAND USING(bno)
	    JOIN PRODUCT_CATEGORY pcategory USING (pcommonid)
	    JOIN CATEGORY USING(catno)
        WHERE D1NAME = #{d1name}
        ORDER BY pstock.reg_date DESC
	    fetch first 40 rows only
	</select>
	
	<select id="getBestProductList" parameterType="String" resultMap="productListResultMap">
	SELECT distinct pcolorid, pname, IMG1, pprice, bname, d1name, d2name, d3name
	  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor USING (pcolorid)
	    JOIN PRODUCT_COMMON pcommon USING (pcommonid)
	    JOIN BRAND USING(bno)
	    JOIN PRODUCT_CATEGORY pcategory USING (pcommonid)
	    JOIN CATEGORY USING(catno)
        WHERE D1NAME = #{d1name}
        ORDER BY PSTOCK.SALES DESC
	    fetch first 40 rows only
	</select>
	
	<!-- <select id="getProductListByCategory" parameterType="String" resultMap="productResultMap">
	SELECT pcommonid, pname, bname, img1, color_img, pprice, d1name,d2name,d3name
	  FROM PRODUCT_COLOR pcolor
	    JOIN PRODUCT_COMMON pcommon USING (pcommonid)
	    JOIN BRAND USING(bno)
	    JOIN PRODUCT_CATEGORY pcategory USING (pcommonid)
	    JOIN CATEGORY USING(catno)
        WHERE D1NAME = #{d1name} 
        <if test="d2name != null">
        AND D2NAME = #{d2name}
        </if>
        <if test="d3name != null"> 
        AND D3NAME = #{d3name}
        </if>
	</select> -->
	
<!-- 	<select id="countAll" resultType="int">
		select count(*) from(
			SELECT pstock.id pstockid, pcommon.name pname, size_code, color_code, pprice, stock, brand.name bname, depth1_name, depth2_name, depth3_name
			  FROM PRODUCT_STOCK pstock JOIN PRODUCT_COLOR pcolor ON (pstock.pcolorid = pcolor.id)
			    JOIN PRODUCT_COMMON pcommon ON (pcolor.product_common_id = pcommon.id)
			    JOIN BRAND ON (pcommon.brand_no = brand.no)
			    JOIN PRODUCT_CATEGORY pcategory ON (pcategory.product_common_id = pcommon.id)
			    JOIN CATEGORY ON (category.no = pcategory.category_no)
		)
	</select> -->
	
	<select id="getD1Names" resultType="String">
	SELECT d1name
	  FROM depth1
	 ORDER BY d1ord
	</select>
	

		<select id="selectProductByPcolorId" parameterType="String" resultMap="productDetailMap">
		select distinct brand.bname , product_common.pname  
				, product_color.pprice, product_color.pcolorid as pcolorId, product_common.pcommonid as pcommonId, product_common.pnote
				, img1, img2, img3, product_color.ccode 
			from product_common, product_color, brand, product_stock
			where product_common.pcommonid = product_color.pcommonid 
			and brand.bno = product_common.bno
			and product_stock.pcolorid = product_color.pcolorid
	        and product_color.pcolorid = #{pcolorId}
	</select>
	
 	<select id="selectColorsByPcolorId" parameterType="String" resultType="com.mycompany.webapp.dto.Color">
		select distinct product_color.ccode, product_color.img1, product_color.img2, product_color.img3, product_color.color_img
		    from product_common, product_color
		    where product_color.pcommonid = (select product_common.pcommonid 
		        from product_color, product_common 
		        where product_color.pcolorid = #{pcolorId}
		        and product_color.pcommonid = product_common.pcommonid)
	</select>

	<select id="selectSizesByPcolorId" parameterType="String" resultType="com.mycompany.webapp.dto.Size">
	select scode
	from (select distinct sizes.sno, sizes.scode
	    from product_color, product_stock, SIZES
	    where product_color.pcolorid = #{pcolorId}
	    and product_color.pcolorid = product_stock.pcolorid
	    and sizes.scode = product_stock.scode
	    order by sizes.sno)
	</select>
	

	<select id="selectWithItemsByPcolorId" parameterType="String" resultMap="productMap">
	select distinct brand.bname , product_common.pname  , product_color.pcolorid 
					, product_color.pprice, product_color.pcommonid , product_color.img1
	from product_color, brand, product_common
	where product_color.pcolorid in (
        select distinct w.wcolorid as wcolorId
        from with_product w left join product_color p on (w.pcolorid = p.pcolorid)
        where p.pcolorid = #{pcolorId}
        )
    and product_common.pcommonid = product_color.pcommonid
	and product_common.bno = brand.bno
	</select>
	

	<select id="getStock" parameterType="String" resultType="com.mycompany.webapp.dto.ProductStock">
		SELECT product_color.pcolorid , sizes.SCODE , product_stock.pstockid
		FROM PRODUCT_STOCK, PRODUCT_COLOR, SIZES
		WHERE PRODUCT_STOCK.pcolorid = product_color.pcolorid 
		AND sizes.scode = PRODUCT_STOCK.SCODE
		AND PRODUCT_COLOR.pcolorid = #{pcolorId}
		ORDER BY SIZES.SNO
		</select>

	<select id="getProductByCategory" parameterType="com.mycompany.webapp.dto.CategoryDepth" resultMap="productListResult">
		select rnum, bname, pname, img1, pprice, pcolorId, d1name, d2name, d3name, color_img, pcommonid
		from (
		select rownum as rnum, bname, pname, img1, pprice, pcolorId, d1name, d2name, d3name, color_img, pcommonid
		from (
			select 
			brand.bname as bname,
			pcommon.pname as pname,
			pcolor.img1 as img1,
			pcolor.pprice as pprice,
			pcolor.pcolorid as pcolorId,
			pcolor.color_img as color_img,
			pcolor.pcommonid as pcommonid,
			category.d1name as d1name,
			category.d2name as d2name,
			category.d3name as d3name
			from
			product_color pcolor
			join product_common pcommon
			on (pcolor.pcommonid = pcommon.pcommonid)
			join brand brand
			on(pcommon.bno = brand.bno)
			join product_category pcategory
			on(pcolor.pcommonid = pcategory.pcommonid)
			join category category
			on(category.catno = pcategory.catno)
			where category.catno in (select catno from category where 
			d1name=#{depth1}
			<if test="depth2 != null">
			and d2name=#{depth2}
			</if>
			<if test="depth3 != null"> 
			and d3name=#{depth3}
			</if>
			)
			order by pcolorId
		)
		where rownum &lt;=#{pager.endRowNo}
		)
		where rnum &gt;=#{pager.startRowNo}
	</select>
	
	<select id="countByCategory" parameterType="com.mycompany.webapp.dto.CategoryDepth" resultType="int">
		select count(*) from(
			select 
			brand.bname as bname,
			pcommon.pname as pname,
			pcolor.img1 as img1,
			pcolor.pprice as pprice,
			pcolor.pcolorid as pcolorId,
			pcolor.color_img as color_img,
			pcolor.pcommonid as pcommonid,
			category.d1name as d1name,
			category.d2name as d2name,
			category.d3name as d3name
			from
			product_color pcolor
			join product_common pcommon
			on (pcolor.pcommonid = pcommon.pcommonid)
			join brand brand
			on(pcommon.bno = brand.bno)
			join product_category pcategory
			on(pcolor.pcommonid = pcategory.pcommonid)
			join category category
			on(category.catno = pcategory.catno)
			where category.catno in (select catno from category where 
			d1name=#{depth1}
			<if test="depth2 != null">
			and d2name=#{depth2}
			</if>
			<if test="depth3 != null"> 
			and d3name=#{depth3}
			</if>
		)
		order by pcolorId
		)

	</select>
	
</mapper>